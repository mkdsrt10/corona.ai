{"version":3,"sources":["webpack:///./node_modules/password-validator/src/lib.js","webpack:///./src/components/forgot1.js","webpack:///./src/components/forgot2.js","webpack:///./src/components/forgot3.js","webpack:///./src/pages/forgot-password.js","webpack:///./node_modules/password-validator/src/constants.js","webpack:///./node_modules/password-validator/src/index.js"],"names":["regex","_process","regexp","RegExp","test","this","password","positive","module","exports","not","symbol","call","has","is","min","num","length","max","digits","letters","uppercase","toLowerCase","lowercase","toUpperCase","symbols","spaces","oneOf","list","indexOf","Amplify","configure","awsconfig","validator","require","ForgotForm1","props","onTypeEnter","e","setState","email","target","value","console","log","state","error","render","onRouteChange","onEmailUpdate","className","style","margin","width","fontSize","background","padding","id","label","onChange","onClick","validate","Auth","forgotPassword","then","data","catch","err","message","class","React","Component","schema","ForgotForm2","code","pass","new_pass","type","forgotPasswordSubmit","ForgotMessage","navigate","Forgot","route","output","color","_classCallCheck","_createClass","lib","_validateLength","isNaN","Number","Error","_isPasswordValidFor","property","method","apply","arguments","_register","func","args","properties","push","PasswordValidator","key","pwd","options","_this","Boolean","String","reduce","errorList","concat","every","bind"],"mappings":"+EAAA,EAAQ,QAER,EAAQ,QASR,IAAIA,EAAQ,EAAQ,QAAeA,MAEnC,SAASC,EAASC,GAChB,OAAO,IAAIC,OAAOD,GAAQE,KAAKC,KAAKC,YAAcD,KAAKE,SAGzDC,EAAOC,QAAU,CAMfC,IAAK,SAAaC,GAGhB,OAFAN,KAAKE,UAAW,GAEZI,GACKV,EAASW,KAAKP,KAAMM,IAW/BE,IAAK,SAAaF,GAGhB,OAFAN,KAAKE,UAAW,GAEZI,GACKV,EAASW,KAAKP,KAAMM,IAW/BG,GAAI,WAEF,OADAT,KAAKE,UAAW,GACT,GAQTQ,IAAK,SAAaC,GAChB,OAAOX,KAAKC,SAASW,QAAUD,GAQjCE,IAAK,SAAaF,GAChB,OAAOX,KAAKC,SAASW,QAAUD,GAMjCG,OAAQ,WACN,OAAOlB,EAASW,KAAKP,KAAML,EAAMmB,SAMnCC,QAAS,WACP,OAAOnB,EAASW,KAAKP,KAAML,EAAMoB,UAMnCC,UAAW,WACT,OAAOhB,KAAKC,WAAaD,KAAKC,SAASgB,gBAAkBjB,KAAKE,UAMhEgB,UAAW,WACT,OAAOlB,KAAKC,WAAaD,KAAKC,SAASkB,gBAAkBnB,KAAKE,UAMhEkB,QAAS,WACP,OAAOxB,EAASW,KAAKP,KAAML,EAAMyB,UAMnCC,OAAQ,WACN,OAAOzB,EAASW,KAAKP,KAAML,EAAM0B,SAQnCC,MAAO,SAAeC,GACpB,OAAOA,EAAKC,QAAQxB,KAAKC,WAAa,IAAMD,KAAKE,Y,mJCvHrDuB,UAAQC,UAAUC,KAClB,IAAIC,EAAYC,EAAQ,QA+CTC,E,oBA5Cd,WAAYC,GAAQ,IAAD,SAClB,cAAMA,IAAN,MAODC,YAAc,SAACC,GACd,EAAKC,SAAS,CAACC,MAAOF,EAAEG,OAAOC,QAC/BC,QAAQC,IAAIN,EAAEG,OAAOC,QARrB,EAAKG,MAAQ,CACZL,MAAO,GACPM,MAAO,IAJU,E,0GAanBC,OAAA,WAAU,IAAD,SAC+B1C,KAAK+B,MAArCY,EADC,EACDA,cAAeC,EADd,EACcA,cActB,OACC,yBAAKC,UAAU,uDAAuDC,MAAO,CAACC,OAAO,OAAQ,cAAc,SAAUC,MAAO,oBAC3H,uBAAGH,UAAU,oBAAoBC,MAAO,CAAC,MAAQ,sBAAjD,oBACA,uBAAGD,UAAU,+BAAb,+BACA,yBAAKA,UAAU,SAASC,MAAO,CAAEG,SAAU,GAAIC,WAAW,mBAAoBC,QAAQ,YAAa,gBAAgB,OAAQH,MAAM,QAChI,kBAAC,IAAD,CAAoBI,GAAG,QAAQC,MAAM,gBAAgBC,SAAUtD,KAAKgC,YAAac,MAAO,CAACI,WAAW,uBAErG,uBAAGL,UAAU,YAAY7C,KAAKwC,MAAMC,OACpC,uBAAGc,QArBW,YAC8B,IAAzC3B,EAAU4B,SAAS,EAAKhB,MAAML,QACjC,EAAKD,SAAS,CAACO,MAAO,KACtBgB,IAAKC,eAAe,EAAKlB,MAAML,OAC1BwB,MAAK,SAAAC,GACLhB,EAAc,EAAKJ,MAAML,OACzBQ,EAAc,MAEdkB,OAAM,SAAAC,GAAG,OAAI,EAAK5B,SAAS,CAACO,MAAOqB,EAAIC,cAE5C,EAAK7B,SAAS,CAACO,MAAO,4BAWAuB,MAAM,yHAAyHlB,MAAO,CAACC,OAAO,SAChK,0BAAMiB,MAAM,OAAZ,iB,GAtCkBC,IAAMC,WCHhCzC,UAAQC,UAAUC,KAElB,IACIwC,EAAS,IADWtC,EAAQ,SAGhCsC,EACC1D,KAAKC,IAAI,GACTD,KAAKI,IAAI,KACTL,MAAMQ,YACNR,MAAMU,YACNV,MAAMM,SACNN,MAAMY,UACNZ,MAAMH,MAAMgB,S,IAyDE+C,E,oBAtDd,WAAYrC,GAAQ,IAAD,SAClB,cAAMA,IAAN,MASDC,YAAc,SAACC,GAAO,IAAD,EACpB,EAAKC,WAAL,MAAgBD,EAAEG,OAAOgB,IAAKnB,EAAEG,OAAOC,MAAvC,IACAC,QAAQC,IAAIN,EAAEG,OAAOC,QAVrB,EAAKG,MAAQ,CACZ6B,KAAM,GACNC,KAAM,GACNC,SAAU,GACV9B,MAAO,IANU,E,0GAiBnBC,OAAA,WAAU,IAAD,SACuB1C,KAAK+B,MAA7BI,EADC,EACDA,MAAOQ,EADN,EACMA,cAed,OACC,yBAAKE,UAAU,uDAAuDC,MAAO,CAACC,OAAO,OAAQ,cAAc,SAAUC,MAAO,oBAC3H,uBAAGH,UAAU,iBAAiBC,MAAO,CAAC,MAAQ,sBAA9C,kBACA,yBAAKD,UAAU,SAASC,MAAO,CAAEG,SAAU,GAAIC,WAAW,mBAAoBC,QAAQ,YAAa,gBAAgB,OAAQH,MAAM,QAChI,kBAAC,IAAD,CAAoBI,GAAG,OAAOC,MAAM,0BAA0BC,SAAUtD,KAAKgC,YAAac,MAAO,CAACI,WAAW,uBAE9G,yBAAKL,UAAU,SAASC,MAAO,CAAEG,SAAU,GAAIC,WAAW,mBAAoBC,QAAQ,YAAa,gBAAgB,OAAQH,MAAM,QAChI,kBAAC,IAAD,CAAoBI,GAAG,OAAOoB,KAAK,WAAWnB,MAAM,eAAeC,SAAUtD,KAAKgC,YAAac,MAAO,CAACI,WAAW,uBAEnH,yBAAKL,UAAU,SAASC,MAAO,CAAEG,SAAU,GAAIC,WAAW,mBAAoBC,QAAQ,YAAa,gBAAgB,OAAQH,MAAM,QAChI,kBAAC,IAAD,CAAoBI,GAAG,WAAWoB,KAAK,WAAWnB,MAAM,uBAAuBC,SAAUtD,KAAKgC,YAAac,MAAO,CAACI,WAAW,uBAE/H,uBAAGK,QArBY,WACZ,EAAKf,MAAM8B,OAAS,EAAK9B,MAAM+B,SAClC,EAAKrC,SAAS,CAACO,MAAO,4BACyB,IAArC0B,EAAOX,SAAS,EAAKhB,MAAM8B,MACrC,EAAKpC,SAAS,CAACO,MAAO,qIARvBgB,IAAKgB,qBAAqBtC,EAAO,EAAKK,MAAM6B,KAAM,EAAK7B,MAAM8B,MACxDX,MAAK,SAAAC,GAAI,OAAIjB,EAAc,MAC3BkB,OAAM,SAAAC,GAAG,OAAI,EAAK5B,SAAS,CAACO,MAAOqB,EAAIC,cAuBrBC,MAAM,iIAAiIlB,MAAO,CAAC,cAAc,SAC/K,0BAAMkB,MAAM,OAAZ,sBAEJ,uBAAGnB,UAAU,YAAY7C,KAAKwC,MAAMC,S,GAjDdwB,IAAMC,W,ICHjBQ,E,gLAZdhC,OAAA,WACC,OACC,yBAAKG,UAAU,uDAAuDC,MAAO,CAACC,OAAO,OAAQ,cAAc,SAAUC,MAAO,oBAC3H,uBAAGH,UAAU,6BAAb,+BACA,uBAAGU,QAAS,kBAAKoB,mBAAS,MAAMX,MAAM,6HAA6HlB,MAAO,CAAC,cAAc,SACrL,0BAAMkB,MAAM,OAAZ,gB,GANoBC,IAAMC,W,ICI5BU,E,oBACL,aAAe,IAAD,SACb,sBAODhC,cAAgB,SAACgB,GAChB,EAAK1B,SAAS,CAACC,MAAOyB,KATT,EAYdjB,cAAgB,SAACkC,GAChB,EAAK3C,SAAS,CAAC2C,MAAOA,KAXtB,EAAKrC,MAAQ,CACZL,MAAO,GACP0C,MAAO,GAJK,E,0GAgBdnC,OAAA,WACC,IAAIoC,EASJ,OARyB,IAArB9E,KAAKwC,MAAMqC,MACdC,EAAS,kBAAC,EAAD,CAAalC,cAAe5C,KAAK4C,cAAeD,cAAe3C,KAAK2C,gBAChD,IAAnB3C,KAAKwC,MAAMqC,MACrBC,EAAS,kBAAC,EAAD,CAAa3C,MAAOnC,KAAKwC,MAAML,MAAOQ,cAAe3C,KAAK2C,gBACpC,IAArB3C,KAAKwC,MAAMqC,QACrBC,EAAS,kBAAC,EAAD,OAIT,6BACC,wBAAId,MAAM,uDAAuDlB,MAAO,CAAC,cAAc,KAAMiC,MAAO,oBAApG,wBACCD,I,GA9BgBb,IAAMC,WAoCZU,a,mBC3CfzE,EAAOC,QAAU,CACfqC,MAAO,CACL7B,OAAQ,2CACRX,SAAU,qCAEZN,MAAO,CACLmB,OAAQ,MACRC,QAAS,YACTK,QAAS,4DACTC,OAAQ,W,qBCTZ,EAAQ,QAER,EAAQ,QAER,EAAQ,QAER,IAAI2D,EAAkB,EAAQ,QAE1BC,EAAe,EAAQ,QAE3B,EAAQ,QAER,IAAIC,EAAM,EAAQ,QAEdzC,EAAQ,EAAQ,QAAeA,MASnC,SAAS0C,EAAgBxE,GACvB,GAAIyE,MAAMC,OAAO1E,IACf,MAAM,IAAI2E,MAAM7C,EAAM7B,QAa1B,SAAS2E,EAAoBC,GAC3B,OAAON,EAAIM,EAASC,QAAQC,MAAM1F,KAAMwF,EAASG,WAWnD,SAASC,EAAUC,EAAMC,GAMvB,OAJA9F,KAAK+F,WAAWC,KAAK,CACnBP,OAAQI,EACRF,UAAWG,IAEN9F,KAGT,IAAIiG,EAAiC,WACnC,aAOA,SAASA,IACPjB,EAAgBhF,KAAMiG,GAEtBjG,KAAK+F,WAAa,GAwKpB,OAxJAd,EAAagB,EAAmB,CAAC,CAC/BC,IAAK,WACL7D,MAAO,SAAkB8D,EAAKC,GAC5B,IAAIC,EAAQrG,KAMZ,OAJAA,KAAKuB,KAAO+E,QAAQF,GAAWA,EAAQ7E,MACvCvB,KAAKC,SAAWsG,OAAOJ,GACvBnG,KAAKE,UAAW,EAEZF,KAAKuB,KACAvB,KAAK+F,WAAWS,QAAO,SAAUC,EAAWjB,GAEjD,OAAKD,EAAoBhF,KAAK8F,EAAOb,GAM9BiB,EAHEA,EAAUC,OAAOlB,EAASC,UAIlC,IAGEzF,KAAK+F,WAAWY,MAAMpB,EAAoBqB,KAAK5G,SAMvD,CACDkG,IAAK,UACL7D,MAAO,WACL,OAAOuD,EAAUrF,KAAKP,KAAM,UAAW2F,aAMxC,CACDO,IAAK,SACL7D,MAAO,WACL,OAAOuD,EAAUrF,KAAKP,KAAM,SAAU2F,aAMvC,CACDO,IAAK,UACL7D,MAAO,WACL,OAAOuD,EAAUrF,KAAKP,KAAM,UAAW2F,aAQxC,CACDO,IAAK,MACL7D,MAAO,SAAa1B,GAGlB,OAFAwE,EAAgBxE,GAETiF,EAAUrF,KAAKP,KAAM,MAAO2F,aAQpC,CACDO,IAAK,MACL7D,MAAO,SAAa1B,GAGlB,OAFAwE,EAAgBxE,GAETiF,EAAUrF,KAAKP,KAAM,MAAO2F,aAMpC,CACDO,IAAK,YACL7D,MAAO,WACL,OAAOuD,EAAUrF,KAAKP,KAAM,YAAa2F,aAM1C,CACDO,IAAK,YACL7D,MAAO,WACL,OAAOuD,EAAUrF,KAAKP,KAAM,YAAa2F,aAQ1C,CACDO,IAAK,SACL7D,MAAO,WACL,OAAOuD,EAAUrF,KAAKP,KAAM,SAAU2F,aAQvC,CACDO,IAAK,MACL7D,MAAO,WACL,OAAOuD,EAAUrF,KAAKP,KAAM,MAAO2F,aAQpC,CACDO,IAAK,MACL7D,MAAO,WACL,OAAOuD,EAAUrF,KAAKP,KAAM,MAAO2F,aAQpC,CACDO,IAAK,KACL7D,MAAO,WACL,OAAOuD,EAAUrF,KAAKP,KAAM,KAAM2F,aAQnC,CACDO,IAAK,QACL7D,MAAO,WACL,OAAOuD,EAAUrF,KAAKP,KAAM,QAAS2F,eAIlCM,EAnL4B,GAsLrC9F,EAAOC,QAAU6F","file":"component---src-pages-forgot-password-js-bc8381a70ae6c14d6157.js","sourcesContent":["require(\"core-js/modules/es6.array.index-of\");\n\nrequire(\"core-js/modules/es6.regexp.constructor\");\n\n/**\n * Generic method to test regex\n *\n * @private\n * @param {string} regex - regex to test\n *                           with password\n */\nvar regex = require('./constants').regex;\n\nfunction _process(regexp) {\n  return new RegExp(regexp).test(this.password) === this.positive;\n}\n\nmodule.exports = {\n  /**\n   * Method to invert the next validations\n   *\n   * @param {RegExp} [symbol] - custom Regex which should not be present\n   */\n  not: function not(symbol) {\n    this.positive = false;\n\n    if (symbol) {\n      return _process.call(this, symbol);\n    }\n\n    return true;\n  },\n\n  /**\n   * Method to invert the effects of not()\n   *\n   * @param {RegExp} [symbol] - custom Regex which should be present\n   */\n  has: function has(symbol) {\n    this.positive = true;\n\n    if (symbol) {\n      return _process.call(this, symbol);\n    }\n\n    return true;\n  },\n\n  /**\n   * Method to invert the effects of not() and\n   * to make the api readable and chainable\n   *\n   */\n  is: function is() {\n    this.positive = true;\n    return true;\n  },\n\n  /**\n   * Method to specify a minimum length\n   *\n   * @param {number} num - minimum length\n   */\n  min: function min(num) {\n    return this.password.length >= num;\n  },\n\n  /**\n   * Method to specify a maximum length\n   *\n   * @param {number} num - maximum length\n   */\n  max: function max(num) {\n    return this.password.length <= num;\n  },\n\n  /**\n   * Method to validate the presence of digits\n   */\n  digits: function digits() {\n    return _process.call(this, regex.digits);\n  },\n\n  /**\n   * Method to validate the presence of letters\n   */\n  letters: function letters() {\n    return _process.call(this, regex.letters);\n  },\n\n  /**\n   * Method to validate the presence of uppercase letters\n   */\n  uppercase: function uppercase() {\n    return this.password !== this.password.toLowerCase() === this.positive;\n  },\n\n  /**\n   * Method to validate the presence of lowercase letters\n   */\n  lowercase: function lowercase() {\n    return this.password !== this.password.toUpperCase() === this.positive;\n  },\n\n  /**\n   * Method to validate the presence of symbols\n   */\n  symbols: function symbols() {\n    return _process.call(this, regex.symbols);\n  },\n\n  /**\n   * Method to validate the presence of space\n   */\n  spaces: function spaces() {\n    return _process.call(this, regex.spaces);\n  },\n\n  /**\n   * Method to provide pre-defined values for password\n   *\n   * @param {array} list - list of values allowed\n   */\n  oneOf: function oneOf(list) {\n    return list.indexOf(this.password) >= 0 === this.positive;\n  }\n};","import React from \"react\"\nimport {navigate} from \"gatsby\";\nimport FloatingLabelInput from 'react-floating-label-input';\nimport Amplify, { Auth } from 'aws-amplify';\nimport awsconfig from '../aws-exports';\nAmplify.configure(awsconfig);\nvar validator = require(\"email-validator\");\n\nclass ForgotForm1 extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\temail: \"\",\n\t\t\terror: \"\",\n\t\t}\n\t}\n\n\tonTypeEnter = (e) => {\n\t\tthis.setState({email: e.target.value})\n\t\tconsole.log(e.target.value)\n\t}\n\n\trender() {\n\t\tconst {onRouteChange, onEmailUpdate} = this.props\n\t\tconst onSubmit =() => {\n\t\t\tif (validator.validate(this.state.email) === true) {\n\t\t\t\tthis.setState({error: \"\"})\n\t\t\t\tAuth.forgotPassword(this.state.email)\n\t\t\t\t    .then(data => {\n\t\t\t\t    \tonEmailUpdate(this.state.email)\n\t\t\t\t    \tonRouteChange(2)\n\t\t\t\t    })\n\t\t\t\t    .catch(err => this.setState({error: err.message}));\n\t\t\t} else {\n\t\t\t\tthis.setState({error: \"Email format incorrect\"})\n\t\t\t}\n\t\t}\n\t\treturn(\n\t\t\t<div className=\"shadow-3 tc b--light-gray ph5 pb4 bg-white ba Avenir\" style={{margin:\"auto\", \"font-family\":\"Avenir\", width: \"max(40%, 700px)\"}}>\n\t\t\t\t<p className=\"f1 ml3 tl mt4 mb3\" style={{\"color\":\"rgb(127, 90, 179)\"}}>Forgot Password?</p>\n\t\t\t\t<p className=\"f5 ml3 tl mt2 gray w-80 mb5\">Please enter your details. </p>\n\t\t\t\t<div className=\"tl mb5\" style={{ fontSize: 20, background:\"rgb(243,245,248)\", padding:\"20px 20px\", \"border-radius\":\"15px\", width:\"85%\"}}>\n\t\t\t\t\t<FloatingLabelInput id=\"email\" label=\"Your Email ID\" onChange={this.onTypeEnter} style={{background:\"rgb(243,245,248)\"}}/>\n\t\t\t\t</div>\n\t\t\t\t<p className=\"f5 b red\">{this.state.error}</p>\n\t\t\t\t<p onClick={onSubmit} class=\"f4 tc no-underline black bg-animate hover-bg-purple hover-white inline-flex pointer mb3 items-center pa3 ba border-box\" style={{margin:\"auto\"}}>\n\t\t\t\t    <span class=\"pr1\"> Continue </span>\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default ForgotForm1;","import React from \"react\"\nimport {navigate} from \"gatsby\";\nimport FloatingLabelInput from 'react-floating-label-input';\nimport Amplify, { Auth } from 'aws-amplify';\nimport awsconfig from '../aws-exports';\nAmplify.configure(awsconfig);\n\nvar passwordValidator = require('password-validator');\nvar schema = new passwordValidator();\n\nschema\n.is().min(8)                                    // Minimum length 8\n.is().max(100)                                  // Maximum length 100\n.has().uppercase()                              // Must have uppercase letters\n.has().lowercase()                              // Must have lowercase letters\n.has().digits()\n.has().symbols()                                \n.has().not().spaces()\n\nclass ForgotForm2 extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tcode: \"\",\n\t\t\tpass: \"\",\n\t\t\tnew_pass: \"\",\n\t\t\terror: \"\",\n\t\t}\n\t}\n\n\tonTypeEnter = (e) => {\n\t\tthis.setState({[e.target.id]: e.target.value})\n\t\tconsole.log(e.target.value)\n\t}\n\n\t\n\n\trender() {\n\t\tconst {email, onRouteChange} = this.props\n\t\tconst changePass = () => {\n\t\t\tAuth.forgotPasswordSubmit(email, this.state.code, this.state.pass)\n\t\t\t    .then(data => onRouteChange(3))\n\t\t\t    .catch(err => this.setState({error: err.message}));\n\t\t}\n\t\tconst onSubmit = () => {\n\t\t\tif (this.state.pass !== this.state.new_pass) {\n\t\t\t\tthis.setState({error: \"Passwords do not match\"})\n\t\t\t} else if (schema.validate(this.state.pass) !== true) {\n\t\t\t\tthis.setState({error: \"Password is weak. Please ensure password is atleast 8 characters long and has uppercase, lowercase, numeric and special symbols.\"})\n\t\t\t} else {\n\t\t\t\tchangePass()\n\t\t\t}\n\t\t}\n\t\treturn(\n\t\t\t<div className=\"shadow-3 tl b--light-gray ph5 pb4 bg-white ba Avenir\" style={{margin:\"auto\", \"font-family\":\"Avenir\", width: \"max(40%, 700px)\"}}>\n\t\t\t\t<p className=\"f1 ml3 mt4 mb5\" style={{\"color\":\"rgb(127, 90, 179)\"}}>Reset Password</p>\n\t\t\t\t<div className=\"tl mb3\" style={{ fontSize: 20, background:\"rgb(243,245,248)\", padding:\"20px 20px\", \"border-radius\":\"15px\", width:\"85%\"}}>\n\t\t\t\t\t<FloatingLabelInput id=\"code\" label=\"Enter Verification Code\" onChange={this.onTypeEnter} style={{background:\"rgb(243,245,248)\"}}/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"tl mb3\" style={{ fontSize: 20, background:\"rgb(243,245,248)\", padding:\"20px 20px\", \"border-radius\":\"15px\", width:\"85%\"}}>\n\t\t\t\t\t<FloatingLabelInput id=\"pass\" type=\"password\" label=\"New Password\" onChange={this.onTypeEnter} style={{background:\"rgb(243,245,248)\"}}/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"tl mb3\" style={{ fontSize: 20, background:\"rgb(243,245,248)\", padding:\"20px 20px\", \"border-radius\":\"15px\", width:\"85%\"}}>\n\t\t\t\t\t<FloatingLabelInput id=\"new_pass\" type=\"password\" label=\"Confirm New Password\" onChange={this.onTypeEnter} style={{background:\"rgb(243,245,248)\"}}/>\n\t\t\t\t</div>\n\t\t\t\t<p onClick={onSubmit} class=\"f4 tc no-underline mb3 black bg-animate hover-bg-purple hover-white inline-flex pointer mb3 items-center pa3 ba border-box mr5\" style={{\"margin-left\":\"auto\"}}>\n\t\t\t\t    <span class=\"pr1\"> Change Password </span>\n\t\t\t\t</p>\n\t\t\t\t<p className=\"f5 b red\">{this.state.error}</p>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default ForgotForm2;","import React from \"react\"\nimport {navigate} from \"gatsby\";\n\nclass ForgotMessage extends React.Component {\n\trender() {\n\t\treturn(\n\t\t\t<div className=\"shadow-3 tl b--light-gray ph5 pb4 bg-white ba Avenir\" style={{margin:\"auto\", \"font-family\":\"Avenir\", width: \"max(40%, 700px)\"}}>\n\t\t\t\t<p className=\"f2 dark-green ml3 mt4 mb6\">Password Change Successful!</p>\n\t\t\t\t<p onClick={()=> navigate(\"/\")} class=\"f4 tc no-underline black bg-animate hover-bg-purple hover-white inline-flex pointer mb3 items-center pa3 ba border-box mr5\" style={{\"margin-left\":\"auto\"}}>\n\t\t\t\t    <span class=\"pr1\"> Sign In </span>\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default ForgotMessage;","import React from \"react\"\nimport '../fonts/TenaliRamakrishna-Regular.ttf'\nimport {navigate} from \"gatsby\";\nimport ForgotForm1 from \"../components/forgot1.js\"\nimport ForgotForm2 from \"../components/forgot2.js\"\nimport ForgotMessage from \"../components/forgot3.js\"\n\nclass Forgot extends React.Component {\n\tconstructor() {\n\t\tsuper()\n\t\tthis.state = {\n\t\t\temail: \"\",\n\t\t\troute: 1,\n\t\t}\n\t}\n\n\tonEmailUpdate = (data) => {\n\t\tthis.setState({email: data})\n\t}\n\n\tonRouteChange = (route) => {\n\t\tthis.setState({route: route})\n\t}\n\n\trender() {\n\t\tlet output;\n\t\tif (this.state.route === 1) {\n\t\t\toutput = <ForgotForm1 onEmailUpdate={this.onEmailUpdate} onRouteChange={this.onRouteChange}/>\n\t\t} else if (this.state.route===2) {\n\t\t\toutput = <ForgotForm2 email={this.state.email} onRouteChange={this.onRouteChange}/>\n\t\t} else if (this.state.route === 3) {\n\t\t\toutput = <ForgotMessage />\n\t\t}\n\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t<h1 class=\"mt0 mb0 fw1 tc mt3 mb4 f1 w-100 bb b--light-gray bw1\" style={{\"font-family\":\"TR\", color: \"rgb(127,90,179)\"}}>HelpDefeatCorona.org</h1>\n\t\t\t\t{output}\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default Forgot;","module.exports = {\n  error: {\n    length: 'Length should be a valid positive number',\n    password: 'Password should be a valid string'\n  },\n  regex: {\n    digits: /\\d+/,\n    letters: /[a-zA-Z]+/,\n    symbols: /[`~\\!@#\\$%\\^\\&\\*\\(\\)\\-_\\=\\+\\[\\{\\}\\]\\\\\\|;:'\",<.>\\/\\?€£¥₹]+/,\n    spaces: /[\\s]+/\n  }\n};","require(\"core-js/modules/es6.function.bind\");\n\nrequire(\"core-js/modules/es6.array.is-array\");\n\nrequire(\"core-js/modules/es6.array.reduce\");\n\nvar _classCallCheck = require(\"/Users/rehanbhatia/Desktop/corona2/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/rehanbhatia/Desktop/corona2/node_modules/@babel/runtime/helpers/createClass\");\n\nrequire(\"core-js/modules/es6.number.constructor\");\n\nvar lib = require('./lib');\n\nvar error = require('./constants').error;\n/**\n * Validates that a number is a valid length (positive number)\n *\n * @private\n * @param {number} num - Number to validate\n */\n\n\nfunction _validateLength(num) {\n  if (isNaN(Number(num))) {\n    throw new Error(error.length);\n  }\n}\n/**\n * Tests a validation and return the result\n *\n * @private\n * @param {string} property - Property to validate\n * @return {boolean} Boolean value indicting the validity\n *           of the password against the property\n */\n\n\nfunction _isPasswordValidFor(property) {\n  return lib[property.method].apply(this, property.arguments);\n}\n/**\n * Registers the properties of a password-validation schema object\n *\n * @private\n * @param {string} func - Property name\n * @param {array} args - arguments for the func property\n */\n\n\nfunction _register(func, args) {\n  // Add property to the schema\n  this.properties.push({\n    method: func,\n    arguments: args\n  });\n  return this;\n}\n\nvar PasswordValidator = /*#__PURE__*/function () {\n  \"use strict\";\n\n  /**\n   * Creates a password-validator schema\n   *\n   * @constructor\n   */\n  function PasswordValidator() {\n    _classCallCheck(this, PasswordValidator);\n\n    this.properties = [];\n  }\n  /**\n   * Method to validate the password against schema\n   *\n   * @param {string} pwd - password to valdiate\n   * @param {object} options - optional options to configure validation\n   * @param {boolean} [options.list] - asks for a list of validation\n   *           failures instead of just true/false\n   * @return {boolean|array} Boolean value indicting the validity\n   *           of the password as per schema, if 'options.list'\n   *           is not set. Otherwise, it returns an array of\n   *           property names which failed validations\n   */\n\n\n  _createClass(PasswordValidator, [{\n    key: \"validate\",\n    value: function validate(pwd, options) {\n      var _this = this;\n\n      this.list = Boolean(options && options.list);\n      this.password = String(pwd);\n      this.positive = true;\n\n      if (this.list) {\n        return this.properties.reduce(function (errorList, property) {\n          // Applies all validations defined in lib one by one\n          if (!_isPasswordValidFor.call(_this, property)) {\n            // If the validation for a property fails,\n            // add it to the error list\n            return errorList.concat(property.method);\n          }\n\n          return errorList;\n        }, []);\n      }\n\n      return this.properties.every(_isPasswordValidFor.bind(this));\n    }\n    /**\n     * Rule to mandate the presence of letters in the password\n     */\n\n  }, {\n    key: \"letters\",\n    value: function letters() {\n      return _register.call(this, 'letters', arguments);\n    }\n    /**\n     * Rule to mandate the presence of digits in the password\n     */\n\n  }, {\n    key: \"digits\",\n    value: function digits() {\n      return _register.call(this, 'digits', arguments);\n    }\n    /**\n     * Rule to mandate the presence of symbols in the password\n     */\n\n  }, {\n    key: \"symbols\",\n    value: function symbols() {\n      return _register.call(this, 'symbols', arguments);\n    }\n    /**\n     * Rule to specify a minimum length of the password\n     *\n     * @param {number} num - minimum length\n     */\n\n  }, {\n    key: \"min\",\n    value: function min(num) {\n      _validateLength(num);\n\n      return _register.call(this, 'min', arguments);\n    }\n    /**\n     * Rule to specify a maximum length of the password\n     *\n     * @param {number} num - maximum length\n     */\n\n  }, {\n    key: \"max\",\n    value: function max(num) {\n      _validateLength(num);\n\n      return _register.call(this, 'max', arguments);\n    }\n    /**\n     * Rule to mandate the presence of lowercase letters in the password\n     */\n\n  }, {\n    key: \"lowercase\",\n    value: function lowercase() {\n      return _register.call(this, 'lowercase', arguments);\n    }\n    /**\n     * Rule to mandate the presence of uppercase letters in the password\n     */\n\n  }, {\n    key: \"uppercase\",\n    value: function uppercase() {\n      return _register.call(this, 'uppercase', arguments);\n    }\n    /**\n     * Rule to mandate the presence of space in the password\n     * It can be used along with 'not' to not allow spaces\n     * in the password\n     */\n\n  }, {\n    key: \"spaces\",\n    value: function spaces() {\n      return _register.call(this, 'spaces', arguments);\n    }\n    /**\n     * Rule to invert the effects of 'not'\n     * Apart from that, 'has' is also used\n     * to make the api readable and chainable\n     */\n\n  }, {\n    key: \"has\",\n    value: function has() {\n      return _register.call(this, 'has', arguments);\n    }\n    /**\n     * Rule to invert the next applied rules.\n     * All the rules applied after 'not' will have opposite effect,\n     * until 'has' rule is applied\n     */\n\n  }, {\n    key: \"not\",\n    value: function not() {\n      return _register.call(this, 'not', arguments);\n    }\n    /**\n     * Rule to invert the effects of 'not'\n     * Apart from that, 'is' is also used\n     * to make the api readable and chainable\n     */\n\n  }, {\n    key: \"is\",\n    value: function is() {\n      return _register.call(this, 'is', arguments);\n    }\n    /**\n     * Rule to whitelist words to be used as password\n     *\n     * @param {array} list - list of values allowed\n     */\n\n  }, {\n    key: \"oneOf\",\n    value: function oneOf() {\n      return _register.call(this, 'oneOf', arguments);\n    }\n  }]);\n\n  return PasswordValidator;\n}();\n\nmodule.exports = PasswordValidator;"],"sourceRoot":""}